{"version":3,"sources":["components/Select.jsx","components/ItemCard.jsx","components/ResultViewer.jsx","components/SearchWrapper.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Select","option","idx","value","className","htmlFor","this","props","selectName","label","name","selected","onChange","default","optionList","map","selectOptions","React","Component","ItemCard","useState","vissible","setVisible","date","dateStr","dateUpdated","Date","parse","toUTCString","onClick","src","imageurl","alt","headline","category","subCatOne","subCatTwo","subCatThree","manufacturer","price","itemId","detailDescription","alsoKnownAs","upc","ResultViewer","data","results","item","img_link","sub_category_one","sub_category_two","sub_category_three","platt_id","description","also_known_as","date_updated","id","SearchWrapper","serverDataRequest","route","queryInputs","setStateFunc","a","options","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","fetch","response","json","message","alert","error","state","selectedVendor","vendors","vendorList","selectedCategory","categoryList","selectedSubCatOne","subCatListOne","selectedSubCatTwo","subCatListTwo","selectedSubCatThree","subCatListThree","nameSearch","sqlSearch","numResults","resultPage","lastSubmittedReq","searchType","resultsPerPage","includeDiscontinued","includeUnpriced","handleVendorChange","bind","handleCatChange","handleSubCatOneChange","handleSubCatTwoChange","handleSubCatThreeChange","handleSearchChange","handleSubmit","handleSqlChange","handleSqlSubmit","nextResults","prevResults","scrollToTop","handleCheckBoxChange","e","searchData","target","formattedData","key","setState","selectedSubCategory","checked","preventDefault","queryData","sqlInput","vendor","subCat","discontinued","unpriced","prevState","Object","assign","window","scrollTo","top","behavior","type","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4c7466e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Select.css\";\n\nexport default class Select extends React.Component {\n\n    selectOptions(option, idx) {\n        if (!option.value) {\n            return ;\n        }\n        return (<option className=\"list-item\" key={idx} value={option.value}>{option.value}</option>)\n    }\n\n    render() {\n        return (\n            <div className=\"Select\">\n                <label htmlFor={this.props.selectName}>{this.props.label}</label>\n                <select name={this.props.selectName} value={this.props.selected.value} onChange={this.props.onChange}>\n                    <option className=\"list-item defualt\" value=\"none\" default>none</option>\n                    {this.props.optionList ? this.props.optionList.map(this.selectOptions) : null}\n                </select>\n            </div>\n        )\n    }\n}","import \"./ItemCard.css\";\nimport React, { useState } from 'react';\nexport default ItemCard;\n\nfunction convertDate(dateStr) {\n    return new Date(Date.parse(dateStr));\n}\n\nfunction ItemCard(props) {\n    const [vissible, setVisible] = useState(false);\n    const date = convertDate(props.dateUpdated).toUTCString();\n    return (\n        <div className=\"ItemCard\" onClick={() => setVisible(!vissible)}>\n            <div className=\"heading\">\n                <img className=\"itemImg\" src={props.imageurl} alt=\"productImage\"/>\n                <h3 className=\"itemHeadline\">{props.headline}</h3>\n            </div>\n            <ul className={vissible ? \"detailsShown\" : \"detailsHidden\"}>\n                <li className=\"categoryList\"><span className=\"li_label\">Categorys:</span> {props.category} {'>'} {props.subCatOne} {'>'} {props.subCatTwo} {'>'} {props.subCatThree}</li>\n                <li className=\"itemManufacturer\"><span className=\"li_label\">Manufacturer:</span> {props.manufacturer}</li>\n                <li className=\"itemPrice\"><span className=\"li_label\">Price:</span> {props.price}</li>\n                <li className=\"itemId\"><span className=\"li_label\">Item id:</span> {props.itemId}</li>\n                <li className=\"detailDescription\"><span className=\"li_label\">Description:</span> {props.detailDescription}</li>\n                <li className=\"alsoKnownAs\"><span className=\"li_label\">Also known as:</span> {props.alsoKnownAs}</li>\n                <li className=\"upc\"><span className=\"li_label\">upc:</span> {props.upc}</li>\n                <li className=\"updatedDate\"><span className=\"li_label\">last updated:</span> {date}</li>\n            </ul>\n        </div>\n    )\n}","import React from \"react\";\nimport ItemCard from \"./ItemCard\";\nimport \"./ResultViewer.css\";\nexport default ResultViewer;\n\n// getData should take a queryString and do a fetch request to the server to aquire data\n\nfunction ResultViewer(props) {\n\n    function item(item){\n        return (\n            <ItemCard\n                key={item.id} //! only effective once data is coming from database\n                imageurl={item.img_link}\n                headline={item.headline}\n                category={item.category ? item.category : \"\"}\n                subCatOne={item.sub_category_one ? item.sub_category_one : \"\"}\n                subCatTwo={item.sub_category_two ? item.sub_category_two : \"\"}\n                subCatThree={item.sub_category_three ? item.sub_category_three : \"\"}\n                manufacturer={item.manufacturer}\n                price={item.price}\n                itemId={item.platt_id}\n                detailDescription={item.description}\n                alsoKnownAs={item.also_known_as}\n                upc={item.upc}\n                dateUpdated={item.date_updated}\n            />\n        )\n    }\n\n    return (\n        <div className=\"ResultViewer\">\n            {props.data.results.map(item)}\n        </div>\n    )\n}","import React from \"react\";\n//import QueryForm from \"./SqlQueryForm\";\nimport Select from \"./Select\";\nimport ResultViewer from \"./ResultViewer\";\nimport \"./SearchWrapper.css\"\n\n\n\nexport default class SearchWrapper extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedVendor: this.props.vendors[0].value,\n            vendorList: this.props.vendors,\n\n            selectedCategory: \"none\",\n            categoryList: [],\n\n            selectedSubCatOne: \"none\",\n            subCatListOne: [],\n\n            selectedSubCatTwo: \"none\",\n            subCatListTwo: [],\n\n            selectedSubCatThree: \"none\",\n            subCatListThree: [],\n\n            nameSearch: \"\",\n            \n            sqlSearch: \"\",\n\n            data: {numResults: 0, results: []},\n            resultPage: 1,\n            lastSubmittedReq: {\n                searchType: \"form\",\n                resultPage: 1\n            },\n            resultsPerPage: 50,\n            includeDiscontinued: false,\n            includeUnpriced: true\n        };\n        this.handleVendorChange = this.handleVendorChange.bind(this);\n        this.handleCatChange = this.handleCatChange.bind(this);\n        this.handleSubCatOneChange = this.handleSubCatOneChange.bind(this);\n        this.handleSubCatTwoChange = this.handleSubCatTwoChange.bind(this);\n        this.handleSubCatThreeChange = this.handleSubCatThreeChange.bind(this);\n        this.handleSearchChange = this.handleSearchChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSqlChange = this.handleSqlChange.bind(this);\n        this.handleSqlSubmit = this.handleSqlSubmit.bind(this);\n        this.nextResults = this.nextResults.bind(this);\n        this.prevResults = this.prevResults.bind(this);\n        this.scrollToTop = this.scrollToTop.bind(this);\n        this.handleCheckBoxChange = this.handleCheckBoxChange.bind(this);\n    }\n\n    serverDataRequest = async (route, queryInputs, setStateFunc) => {\n        const options = {\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                mode: 'cors', // no-cors, *cors, same-origin\n                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n                credentials: 'same-origin', // include, *same-origin, omit\n                headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                redirect: 'follow', // manual, *follow, error\n                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n                body: JSON.stringify(queryInputs) // body data type must match \"Content-Type\" header\n                };\n        const response = await fetch(route , options);\n        const body = await response.json();\n        if (body.message) {\n            alert(\"the search you just tried to perform failed.\\n\" + body.message + \"\\n\" + body.error);\n            return ;\n        }\n        setStateFunc(body);\n    }\n\n    handleVendorChange(e) {\n        const searchData = {selectedVendor: e.target.value}\n        this.serverDataRequest(\"/vendorSelect\", searchData,\n            (data) => {\n                const formattedData = data.map((item, idx) => {\n                    return {key: idx, value: item.category};\n                });\n                this.setState({categoryList: formattedData});\n            }\n        );\n        this.setState({\n            selectedVendor: e.target.value,\n            selectedCategory: \"none\",\n            selectedSubCatOne: \"none\",\n            subCatListOne: [],\n            selectedSubCatTwo: \"none\",\n            subCatListTwo: [],\n            selectedSubCatThree: \"none\",\n            subCatListThree: [],\n        });\n    }\n    handleCatChange(e) {\n        const searchData = {\n            selectedVendor: this.state.selectedVendor,\n            selectedCategory: e.target.value\n            };\n        this.serverDataRequest(\"/categorySelect\", searchData,\n            (data) => {\n                const formattedData = data.map((item, idx) => {\n                    return ({key: idx, value: item.sub_category_one});\n                });\n                this.setState({subCatListOne: formattedData});\n            }\n        );\n        this.setState({\n            selectedCategory: e.target.value,\n            selectedSubCatOne: \"none\",\n            subCatListOne: [],\n            selectedSubCatTwo: \"none\",\n            subCatListTwo: [],\n            selectedSubCatThree: \"none\",\n            subCatListThree: [],\n        });\n    }\n    handleSubCatOneChange(e) {\n        const searchData = {\n            selectedVendor: this.state.selectedVendor,\n            selectedCategory: this.state.selectedCategory,\n            selectedSubCategory: e.target.value\n        }\n        this.serverDataRequest(\"/subCatSelect\", searchData,\n            (data) => {\n                const formattedData = data.map((item, idx) => {\n                    return ({key: idx, value: item.sub_category_two});\n                });\n                this.setState({subCatListTwo: formattedData});\n            }\n        );\n        this.setState({\n            selectedSubCatOne: e.target.value,\n            selectedSubCatTwo: \"none\",\n            selectedSubCatThree: \"none\",\n            subCatListThree: [],\n            //subCatListTwo: [{key: 0, value: \"sub2 1\"}, {key: 1, value: \"sub2 2\"}, {key: 2, value: \"sub2 3\"}, {key: 3, value: \"sub2 4\"}]\n        });\n    }\n    handleSubCatTwoChange(e) {\n        const searchData = {\n            selectedVendor: this.state.selectedVendor,\n            selectedCategory: this.state.selectedCategory,\n            selectedSubCategory: this.state.selectedSubCatOne,\n            selectedSubCatTwo: e.target.value\n        }\n        this.serverDataRequest(\"/filterOneSelect\", searchData,\n            (data) => {\n                const formattedData = data.map((item, idx) => {\n                    return ({key: idx, value: item.sub_category_three});\n                });\n                this.setState({subCatListThree: formattedData});\n            }\n        );\n        this.setState({\n            selectedSubCatTwo: e.target.value,\n            //subCatListThree: [{key: 0, value: \"sub3 1\"}, {key: 1, value: \"sub3 2\"}, {key: 2, value: \"sub3 3\"}, {key: 3, value: \"sub3 4\"}]\n        });\n    }\n    handleSubCatThreeChange(e) {\n        this.setState({\n            selectedSubCatThree: e.target.value\n        });\n    }\n    handleSearchChange(e) {\n        this.setState({\n            nameSearch: e.target.value\n        });\n    }\n\n    handleCheckBoxChange(e) {\n        const value = e.target.checked;\n        const name = e.target.name;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSqlChange(e) {\n        this.setState({\n            sqlSearch: e.target.value\n        });\n    }\n\n    handleSqlSubmit(e) {\n        e.preventDefault();\n        const queryData = {\n            searchType: \"sql\",\n            sqlInput: this.state.sqlSearch,\n            resultPage: 1,\n            resultsPerPage: this.state.resultsPerPage\n        };\n        this.setState({\n            resultPage: 1,\n            lastSubmittedReq: queryData\n        });\n        this.serverDataRequest(\"/sqlQuery\", queryData, (data) => {this.setState({data: data})});\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const queryData = {\n            searchType: \"form\",\n            vendor: this.state.selectedVendor,\n            category: this.state.selectedCategory,\n            subCat: this.state.selectedSubCatOne,\n            subCatTwo: this.state.selectedSubCatTwo,\n            subCatThree: this.state.selectedSubCatThree,\n            nameSearch: this.state.nameSearch,\n            resultPage: 1,\n            resultsPerPage: this.state.resultsPerPage,\n            discontinued: this.state.includeDiscontinued,\n            unpriced: this.state.includeUnpriced\n        }\n        this.setState({\n            resultPage: 1,\n            lastSubmittedReq: queryData\n        });\n        \n        this.serverDataRequest(\"/search\", queryData, (data) => {this.setState({data: data})});\n        // query database for results based off of these states. if a state is not set should be * in query\n    }\n\n    prevResults() {\n        this.setState((prevState) => ({resultPage: prevState.resultPage - 1}));\n        let searchData = Object.assign({}, this.state.lastSubmittedReq);\n        searchData.resultPage = this.state.resultPage - 1;\n        if (this.state.lastSubmittedReq.searchType === \"form\") {\n            this.serverDataRequest(\"/search\", searchData, (data) => {this.setState({data: data})});\n        }\n        else {\n            this.serverDataRequest(\"/sqlQuery\", searchData, (data) => {this.setState({data: data})});\n        }\n    }\n    nextResults() {\n        this.setState((prevState) => ({resultPage: prevState.resultPage + 1}));\n        let searchData = Object.assign({}, this.state.lastSubmittedReq);\n        searchData.resultPage = this.state.resultPage + 1;\n        if (this.state.lastSubmittedReq.searchType === \"form\") {\n            this.serverDataRequest(\"/search\", searchData, (data) => {this.setState({data: data})});\n        }\n        else {\n            this.serverDataRequest(\"/sqlQuery\", searchData, (data) => {this.setState({data: data})});\n        }\n    }\n\n    scrollToTop() {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"SearchWrapper\">\n                {/* <form>\n                    <QueryForm sql={this.state.sqlSearch} onChange={this.handleSqlChange}/>\n                    <button type=\"submit\" onClick={this.handleSqlSubmit}><span>Run Query</span></button>\n                </form> */}\n                <form>\n                    <Select\n                        label=\"Vendor\"\n                        selectName=\"vendorList\"\n                        selected={this.state.selectedVendor}\n                        onChange={this.handleVendorChange}\n                        optionList={this.state.vendorList}\n                    />\n                    <Select\n                        label=\"Category\"\n                        selectName=\"categoryList\"\n                        selected={this.state.selectedCategory}\n                        onChange={this.handleCatChange}\n                        optionList={this.state.categoryList}\n                    />\n                    <Select\n                        label=\"Sub Category\"\n                        selectName=\"SubCategory\"\n                        selected={this.state.selectedSubCatOne}\n                        onChange={this.handleSubCatOneChange}\n                        optionList={this.state.subCatListOne}\n                    />\n                    <Select\n                        label=\"Filter\"\n                        selectName=\"filterOne\"\n                        selected={this.state.selectedSubCatTwo}\n                        onChange={this.handleSubCatTwoChange}\n                        optionList={this.state.subCatListTwo}\n                    />\n                    <Select\n                        label=\"Sub Filter\"\n                        selectName=\"filterTwo\"\n                        selected={this.state.selectedSubCatThree}\n                        onChange={this.handleSubCatThreeChange}\n                        optionList={this.state.subCatListThree}\n                    />\n                    <label className=\"nameSeachLabel\" htmlFor=\"nameSearch\">Search term</label>\n                    <input name=\"nameSearch\" type=\"text\" value={this.state.nameSearch} onChange={this.handleSearchChange} placeholder=\"20 Amp\"></input>\n                    <div className=\"checkboxes\">\n                        <input name=\"includeDiscontinued\" type=\"checkbox\" checked={this.state.includeDiscontinued} onChange={this.handleCheckBoxChange}></input>\n                        <label className=\"checkboxLabel\" htmlFor=\"includeDiscontinued\"> Include discontinued products</label>\n                        <br/>\n                        <input name=\"includeUnpriced\" type=\"checkbox\" checked={this.state.includeUnpriced} onChange={this.handleCheckBoxChange}></input>\n                        <label className=\"checkboxLabel\" htmlFor=\"includeUnpriced\"> Include unpriced products</label>\n                    </div>\n                    <button className=\"submit_btn\" type=\"submit\" value=\"submit\" onClick={this.handleSubmit}>Search</button>\n                </form>\n                <div className=\"results-info\">\n                        {this.state.data.numResults ?\n                        <p><span className=\"resultnumStart\">{(this.state.resultsPerPage * this.state.resultPage) - this.state.resultsPerPage} - {this.state.resultsPerPage * this.state.resultPage < this.state.data.numResults ?\n                        this.state.resultsPerPage * this.state.resultPage : this.state.data.numResults}</span>\n                        / <span className=\"resultnumEnd\">{this.state.data.numResults}</span></p> : \"\"}\n                        <div className=\"nextPrevBtns\">\n                            {this.state.resultPage > 1 ?\n                            <button className=\"previousResultsButton\" onClick={this.prevResults}>back</button> : \"\"}\n                            {this.state.data.numResults - (this.state.resultsPerPage * this.state.resultPage) > 0 ?\n                            <button className=\"nextResultsButton\" onClick={this.nextResults}>next {'>'}</button> : \"\"}\n                        </div>\n                    </div>\n                <div className=\"results\">\n                    <ResultViewer data={this.state.data} />\n                </div>\n                {this.state.data.numResults > 0 ? <button className=\"topBtn\" onClick={this.scrollToTop}>^ back to top ^</button> : ''}\n            </div>\n        )\n    }\n}","\nimport './App.css';\nimport SearchWrapper from './components/SearchWrapper';\n\nfunction App() {\nconst vendors = [{key: 0, value: \"Platt\"}];\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <SearchWrapper vendors={vendors}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}